// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: iWaiTLt8mAup4ReehswsSx
// Component: Iuq95P4E6ady

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import { NavigationBar } from "@plasmicpkgs/plasmic-nav";
import Link1 from "../../Link1"; // plasmic-import: Wk3pm7NzsIY9/component
import Link2 from "../../Link2"; // plasmic-import: f0ftlBRhAHPN/component
import Link3 from "../../Link3"; // plasmic-import: P6OuWwiFq4gQ/component
import Link4 from "../../Link4"; // plasmic-import: b5zzKfYNksQk/component
import Link5 from "../../Link5"; // plasmic-import: jy_zqM-l3sYE/component
import Link6 from "../../Link6"; // plasmic-import: qdfwHKfwtv8_/component
import Button from "../../Button"; // plasmic-import: f3lmI1Q2JQuQ/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import { FormWrapper } from "@plasmicpkgs/antd5/skinny/Form";
import { formHelpers as FormWrapper_Helpers } from "@plasmicpkgs/antd5/skinny/Form";
import { FormItemWrapper } from "@plasmicpkgs/antd5/skinny/FormItem";
import { AntdInput } from "@plasmicpkgs/antd5/skinny/registerInput";
import { inputHelpers as AntdInput_Helpers } from "@plasmicpkgs/antd5/skinny/registerInput";
import { AntdTextArea } from "@plasmicpkgs/antd5/skinny/registerInput";
import { inputHelpers as AntdTextArea_Helpers } from "@plasmicpkgs/antd5/skinny/registerInput";
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton";
import { AntdAccordion } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { accordionHelpers as AntdAccordion_Helpers } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { AntdAccordionItem } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import FooterMain from "../../FooterMain"; // plasmic-import: qoZVCK7paFuV/component
import { PlasmicHead } from "@plasmicapp/react-web";

import { useScreenVariants as useScreenVariantssppb0UOhrN5L } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Sppb0uOhrN5l/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: iWaiTLt8mAup4ReehswsSx/projectcss
import sty from "./PlasmicKotakKami.module.css"; // plasmic-import: Iuq95P4E6ady/css

import ProfileCircleSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__ProfileCircleSvgrepoCom1Svg"; // plasmic-import: 0qa3aoynIlk5/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: q0SxIWf05NzX/icon
import BestSellersvgIcon from "./icons/PlasmicIcon__BestSellersvg"; // plasmic-import: gEr3vmMDIr_A/icon
import MotorcyclesvgIcon from "./icons/PlasmicIcon__Motorcyclesvg"; // plasmic-import: bB21gLC1MPi2/icon
import PinsvgIcon from "./icons/PlasmicIcon__Pinsvg"; // plasmic-import: d5Rc8pnBZxlJ/icon
import ArrowLeftSvgrepoComsvgIcon from "./icons/PlasmicIcon__ArrowLeftSvgrepoComsvg"; // plasmic-import: n23QXdz0xMhj/icon
import ArrowOpenRightSvgrepoComsvgIcon from "./icons/PlasmicIcon__ArrowOpenRightSvgrepoComsvg"; // plasmic-import: bseFrujWYX3A/icon
import LocationPinSvgrepoComsvgIcon from "./icons/PlasmicIcon__LocationPinSvgrepoComsvg"; // plasmic-import: WLhuhbeughNW/icon
import LocationArrowSvgrepoComsvgIcon from "./icons/PlasmicIcon__LocationArrowSvgrepoComsvg"; // plasmic-import: HBJM9aAQDa93/icon

createPlasmicElementProxy;

export type PlasmicKotakKami__VariantMembers = {};
export type PlasmicKotakKami__VariantsArgs = {};
type VariantPropType = keyof PlasmicKotakKami__VariantsArgs;
export const PlasmicKotakKami__VariantProps = new Array<VariantPropType>();

export type PlasmicKotakKami__ArgsType = {};
type ArgPropType = keyof PlasmicKotakKami__ArgsType;
export const PlasmicKotakKami__ArgProps = new Array<ArgPropType>();

export type PlasmicKotakKami__OverridesType = {
  root?: Flex__<"div">;
  navigationBar?: Flex__<typeof NavigationBar>;
  link1?: Flex__<typeof Link1>;
  link2?: Flex__<typeof Link2>;
  link3?: Flex__<typeof Link3>;
  link4?: Flex__<typeof Link4>;
  link5?: Flex__<typeof Link5>;
  link6?: Flex__<typeof Link6>;
  clientsSection6?: Flex__<"div">;
  form2?: Flex__<typeof FormWrapper>;
  textArea?: Flex__<typeof AntdTextArea>;
  accordion2?: Flex__<typeof AntdAccordion>;
  accordion3?: Flex__<typeof AntdAccordion>;
  accordion4?: Flex__<typeof AntdAccordion>;
  footerMain?: Flex__<typeof FooterMain>;
  pageMetadataOverride?: Flex__<typeof PlasmicHead>;
};

export interface DefaultKotakKamiProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicKotakKami__RenderFunc(props: {
  variants: PlasmicKotakKami__VariantsArgs;
  args: PlasmicKotakKami__ArgsType;
  overrides: PlasmicKotakKami__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "form2.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "form2",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "form2.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,

        refName: "form2",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "accordion2.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "accordion3.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "accordion4.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantssppb0UOhrN5L()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicKotakKami.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicKotakKami.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicKotakKami.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicKotakKami.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicKotakKami.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicKotakKami.pageMetadata.description}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <section className={classNames(projectcss.all, sty.section__n34IX)}>
            <NavigationBar
              data-plasmic-name={"navigationBar"}
              data-plasmic-override={overrides.navigationBar}
              brand={
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__s3LF4
                  )}
                  component={Link}
                  href={`/`}
                  platform={"nextjs"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__aDh81)}
                    displayHeight={"100px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: "/plasmic/uwinfly/images/logopng.png",
                      fullWidth: 512,
                      fullHeight: 512,
                      aspectRatio: undefined
                    }}
                  />
                </PlasmicLink__>
              }
              className={classNames("__wab_instance", sty.navigationBar)}
              closeButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___6X7P0)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "20px"
                      : "auto"
                  }
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "20px"
                      : "auto"
                  }
                  src={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? {
                          src: "/plasmic/uwinfly/images/_3F1C0155019E22Ca2146D6372Fa054D8Svg.svg",
                          fullWidth: 150,
                          fullHeight: 150,
                          aspectRatio: 1
                        }
                      : "https://static1.plasmic.app/close.svg"
                  }
                />
              }
              forceOpenMenu={
                hasVariant(globalVariants, "screen", "mobile")
                  ? false
                  : undefined
              }
              itemsGap={hasVariant(globalVariants, "screen", "mobile") ? 8 : 8}
              menuItems={
                <React.Fragment>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__c6CIg
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    <Link1
                      data-plasmic-name={"link1"}
                      data-plasmic-override={overrides.link1}
                      className={classNames("__wab_instance", sty.link1)}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__kaDod
                    )}
                    component={Link}
                    href={`/about-us`}
                    platform={"nextjs"}
                  >
                    <Link2
                      data-plasmic-name={"link2"}
                      data-plasmic-override={overrides.link2}
                      className={classNames("__wab_instance", sty.link2)}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__fzoRk
                    )}
                    component={Link}
                    href={`/Mitra`}
                    platform={"nextjs"}
                  >
                    <Link3
                      data-plasmic-name={"link3"}
                      data-plasmic-override={overrides.link3}
                      className={classNames("__wab_instance", sty.link3)}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___3AnIb
                    )}
                    component={Link}
                    href={`/Blog`}
                    platform={"nextjs"}
                  >
                    <Link4
                      data-plasmic-name={"link4"}
                      data-plasmic-override={overrides.link4}
                      className={classNames("__wab_instance", sty.link4)}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__kx4PP
                    )}
                    component={Link}
                    href={`/persyaratan`}
                    platform={"nextjs"}
                  >
                    <Link5
                      data-plasmic-name={"link5"}
                      data-plasmic-override={overrides.link5}
                      className={classNames("__wab_instance", sty.link5)}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__ifXvI
                    )}
                    component={Link}
                    href={`/Kotak-kami`}
                    platform={"nextjs"}
                  >
                    <Link6
                      data-plasmic-name={"link6"}
                      data-plasmic-override={overrides.link6}
                      className={classNames("__wab_instance", sty.link6)}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__zjsAh
                    )}
                    component={Link}
                    href={`/Profile`}
                    platform={"nextjs"}
                  >
                    <ProfileCircleSvgrepoCom1SvgIcon
                      className={classNames(projectcss.all, sty.svg__tmYx5)}
                      role={"img"}
                    />
                  </PlasmicLink__>
                </React.Fragment>
              }
              openButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__rOlnw)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "25px"
                      : "35px"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  src={{
                    src: "/plasmic/uwinfly/images/iconsvg.svg",
                    fullWidth: 231,
                    fullHeight: 150,
                    aspectRatio: 1.537966
                  }}
                />
              }
              responsiveBreakpoint={768}
            />

            <section className={classNames(projectcss.all, sty.section__mKwdd)}>
              <div className={classNames(projectcss.all, sty.columns__eym06)}>
                <div
                  className={classNames(projectcss.all, sty.column__rpo39)}
                />

                <div className={classNames(projectcss.all, sty.column__cZdA)} />
              </div>
            </section>
          </section>
          <section className={classNames(projectcss.all, sty.section__r0H6J)}>
            <div className={classNames(projectcss.all, sty.columns__vrQgu)}>
              <div className={classNames(projectcss.all, sty.column__qYul)}>
                <Button
                  className={classNames("__wab_instance", sty.button___9Tb24)}
                  showStartIcon={true}
                >
                  {"Best seller"}
                </Button>
              </div>
              <div className={classNames(projectcss.all, sty.column__icm0X)}>
                <Button
                  className={classNames("__wab_instance", sty.button__svqrg)}
                  showStartIcon={true}
                  startIcon={
                    <BestSellersvgIcon
                      className={classNames(projectcss.all, sty.svg__ekkzD)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rOSsO
                    )}
                  >
                    {"Best seller"}
                  </div>
                </Button>
              </div>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.column__dijX4
                )}
                component={Link}
                href={`/Produk`}
                platform={"nextjs"}
              >
                <Button
                  className={classNames("__wab_instance", sty.button__n3KXw)}
                  showStartIcon={true}
                  startIcon={
                    <MotorcyclesvgIcon
                      className={classNames(projectcss.all, sty.svg__imovl)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cgclm
                    )}
                  >
                    {"Produk"}
                  </div>
                </Button>
              </PlasmicLink__>
              <div className={classNames(projectcss.all, sty.column__dau2Q)}>
                <Button
                  className={classNames("__wab_instance", sty.button__lLy49)}
                  showStartIcon={true}
                  startIcon={
                    <PinsvgIcon
                      className={classNames(projectcss.all, sty.svg__rgeR3)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__e39N1
                    )}
                  >
                    {"Lokasi"}
                  </div>
                </Button>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__jLsP7)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__bxKl)}
            >
              <div className={classNames(projectcss.all, sty.column__u1EGt)}>
                <Button
                  className={classNames("__wab_instance", sty.button__vZTdR)}
                  showStartIcon={true}
                  startIcon={
                    <BestSellersvgIcon
                      className={classNames(projectcss.all, sty.svg___7Lm3G)}
                      role={"img"}
                    />
                  }
                >
                  {"Best seller"}
                </Button>
              </div>
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.column__fh0M4
                )}
                component={Link}
                href={`/Produk`}
                platform={"nextjs"}
              >
                <Button
                  className={classNames("__wab_instance", sty.button__yFj5K)}
                  showStartIcon={true}
                  startIcon={
                    <MotorcyclesvgIcon
                      className={classNames(projectcss.all, sty.svg___8PJqZ)}
                      role={"img"}
                    />
                  }
                >
                  {"Produk"}
                </Button>
              </PlasmicLink__>
              <div className={classNames(projectcss.all, sty.column__cy0Vb)}>
                <Button
                  className={classNames("__wab_instance", sty.button__hMzav)}
                  showStartIcon={true}
                  startIcon={
                    <PinsvgIcon
                      className={classNames(projectcss.all, sty.svg__h1Utu)}
                      role={"img"}
                    />
                  }
                >
                  {"Lokasi"}
                </Button>
              </div>
            </Stack__>
          </section>
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div className={classNames(projectcss.all, sty.columns__cwt7F)}>
              <div className={classNames(projectcss.all, sty.column__taiYi)}>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__qvwuv
                  )}
                  component={Link}
                  href={`/`}
                  platform={"nextjs"}
                >
                  <ArrowLeftSvgrepoComsvgIcon
                    className={classNames(projectcss.all, sty.svg__i7EAd)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__i2B15
                    )}
                  >
                    {"  Balik Menu"}
                  </div>
                </PlasmicLink__>
              </div>
              <div className={classNames(projectcss.all, sty.column__y283)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qYSvN
                  )}
                >
                  {"Januari 24, 2024"}
                </div>
              </div>
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <div className={classNames(projectcss.all, sty.columns__ogeJt)}>
              <div className={classNames(projectcss.all, sty.column__njvsA)}>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__imGx2
                  )}
                  component={Link}
                  href={`/`}
                  platform={"nextjs"}
                >
                  <ArrowLeftSvgrepoComsvgIcon
                    className={classNames(projectcss.all, sty.svg__caAi)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iQd4Z
                    )}
                  >
                    {"  Balik Menu"}
                  </div>
                </PlasmicLink__>
              </div>
              <div className={classNames(projectcss.all, sty.column__ssHW)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kjgyf
                  )}
                >
                  {"Januari 24, 2024"}
                </div>
              </div>
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <section className={classNames(projectcss.all, sty.section__gToQd)}>
              <div className={classNames(projectcss.all, sty.columns__tu6Lk)}>
                <div className={classNames(projectcss.all, sty.column__e9O1E)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qg0L
                    )}
                  >
                    {"Pertanyaan sering di ajukan ?"}
                  </div>
                  <ArrowOpenRightSvgrepoComsvgIcon
                    className={classNames(projectcss.all, sty.svg__k3AfZ)}
                    role={"img"}
                  />
                </div>
              </div>
              <section
                className={classNames(projectcss.all, sty.section__iBvGy)}
              >
                <div className={classNames(projectcss.all, sty.columns__gIiEb)}>
                  <div
                    className={classNames(projectcss.all, sty.column__jScEf)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yJzjF
                      )}
                    >
                      {"Pertanyaan sering di ajukan ?"}
                    </div>
                    <ArrowOpenRightSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg__cmZsd)}
                      role={"img"}
                    />
                  </div>
                </div>
              </section>
            </section>
          ) : null}
          <section className={classNames(projectcss.all, sty.section__n6DMf)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__dt5Cz
              )}
            >
              {"Kontak kami"}
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__a8IUr)}>
            <section className={classNames(projectcss.all, sty.section__lPkHg)}>
              <Embed
                className={classNames("__wab_instance", sty.embedHtml__tI1Pk)}
                code={
                  hasVariant(globalVariants, "screen", "mobile")
                    ? '<script src="https://cdn03.jotfor.ms/static/prototype.forms.js?v=3.3.52465" type="text/javascript"></script>\r\n<script src="https://cdn01.jotfor.ms/static/jotform.forms.js?v=3.3.52465" type="text/javascript"></script>\r\n<script src="https://cdn01.jotfor.ms/s/umd/22347ad37de/for-form-branding-footer.js?v=3.3.52465" type="text/javascript" defer></script>\r\n<script src="https://cdn02.jotfor.ms/js/vendor/smoothscroll.min.js?v=3.3.52465" type="text/javascript"></script>\r\n<script src="https://cdn03.jotfor.ms/js/errorNavigation.js?v=3.3.52465" type="text/javascript"></script>\r\n<script type="text/javascript">\tJotForm.newDefaultTheme = true;\r\n\tJotForm.extendsNewTheme = false;\r\n\tJotForm.singleProduct = false;\r\n\tJotForm.newPaymentUIForNewCreatedForms = true;\r\n\tJotForm.texts = {"confirmEmail":"E-mail does not match","pleaseWait":"Please wait...","validateEmail":"You need to validate this e-mail","confirmClearForm":"Are you sure you want to clear the form","lessThan":"Your score should be less than or equal to","incompleteFields":"There are incomplete required fields. Please complete them.","required":"This field is required.","requireOne":"At least one field required.","requireEveryRow":"Every row is required.","requireEveryCell":"Every cell is required.","email":"Enter a valid e-mail address","alphabetic":"This field can only contain letters","numeric":"This field can only contain numeric values","alphanumeric":"This field can only contain letters and numbers.","cyrillic":"This field can only contain cyrillic characters","url":"This field can only contain a valid URL","currency":"This field can only contain currency values.","fillMask":"Field value must fill mask.","uploadExtensions":"You can only upload following files:","noUploadExtensions":"File has no extension file type (e.g. .txt, .png, .jpeg)","uploadFilesize":"File size cannot be bigger than:","uploadFilesizemin":"File size cannot be smaller than:","gradingScoreError":"Score total should only be less than or equal to","inputCarretErrorA":"Input should not be less than the minimum value:","inputCarretErrorB":"Input should not be greater than the maximum value:","maxDigitsError":"The maximum digits allowed is","minCharactersError":"The number of characters should not be less than the minimum value:","maxCharactersError":"The number of characters should not be more than the maximum value:","freeEmailError":"Free email accounts are not allowed","minSelectionsError":"The minimum required number of selections is ","maxSelectionsError":"The maximum number of selections allowed is ","pastDatesDisallowed":"Date must not be in the past.","dateLimited":"This date is unavailable.","dateInvalid":"This date is not valid. The date format is {format}","dateInvalidSeparate":"This date is not valid. Enter a valid {element}.","ageVerificationError":"You must be older than {minAge} years old to submit this form.","multipleFileUploads_typeError":"{file} has invalid extension. Only {extensions} are allowed.","multipleFileUploads_sizeError":"{file} is too large, maximum file size is {sizeLimit}.","multipleFileUploads_minSizeError":"{file} is too small, minimum file size is {minSizeLimit}.","multipleFileUploads_emptyError":"{file} is empty, please select files again without it.","multipleFileUploads_uploadFailed":"File upload failed, please remove it and upload the file again.","multipleFileUploads_onLeave":"The files are being uploaded, if you leave now the upload will be cancelled.","multipleFileUploads_fileLimitError":"Only {fileLimit} file uploads allowed.","dragAndDropFilesHere_infoMessage":"Drag and drop files here","chooseAFile_infoMessage":"Choose a file","maxFileSize_infoMessage":"Max. file size","generalError":"There are errors on the form. Please fix them before continuing.","generalPageError":"There are errors on this page. Please fix them before continuing.","wordLimitError":"Too many words. The limit is","wordMinLimitError":"Too few words.  The minimum is","characterLimitError":"Too many Characters.  The limit is","characterMinLimitError":"Too few characters. The minimum is","ccInvalidNumber":"Credit Card Number is invalid.","ccInvalidCVC":"CVC number is invalid.","ccInvalidExpireDate":"Expire date is invalid.","ccInvalidExpireMonth":"Expiration month is invalid.","ccInvalidExpireYear":"Expiration year is invalid.","ccMissingDetails":"Please fill up the credit card details.","ccMissingProduct":"Please select at least one product.","ccMissingDonation":"Please enter numeric values for donation amount.","disallowDecimals":"Please enter a whole number.","restrictedDomain":"This domain is not allowed","ccDonationMinLimitError":"Minimum amount is {minAmount} {currency}","requiredLegend":"All fields marked with * are required and must be filled.","geoPermissionTitle":"Permission Denied","geoPermissionDesc":"Check your browser\'s privacy settings.","geoNotAvailableTitle":"Position Unavailable","geoNotAvailableDesc":"Location provider not available. Please enter the address manually.","geoTimeoutTitle":"Timeout","geoTimeoutDesc":"Please check your internet connection and try again.","selectedTime":"Selected Time","formerSelectedTime":"Former Time","cancelAppointment":"Cancel Appointment","cancelSelection":"Cancel Selection","noSlotsAvailable":"No slots available","slotUnavailable":"{time} on {date} has been selected is unavailable. Please select another slot.","multipleError":"There are {count} errors on this page. Please correct them before moving on.","oneError":"There is {count} error on this page. Please correct it before moving on.","doneMessage":"Well done! All errors are fixed.","invalidTime":"Enter a valid time","doneButton":"Done","reviewSubmitText":"Review and Submit","nextButtonText":"Next","prevButtonText":"Previous","seeErrorsButton":"See Errors","notEnoughStock":"Not enough stock for the current selection","notEnoughStock_remainedItems":"Not enough stock for the current selection ({count} items left)","soldOut":"Sold Out","justSoldOut":"Just Sold Out","selectionSoldOut":"Selection Sold Out","subProductItemsLeft":"({count} items left)","startButtonText":"START","submitButtonText":"Submit","submissionLimit":"Sorry! Only one entry is allowed. Multiple submissions are disabled for this form.","reviewBackText":"Back to Form","seeAllText":"See All","progressMiddleText":"of","fieldError":"field has an error.","error":"Error"};\r\n\tJotForm.newPaymentUI = true;\r\n\tJotForm.replaceTagTest = true;\r\n\tJotForm.clearFieldOnHide="disable";\r\n\tJotForm.submitError="jumpToFirstError";\r\n\twindow.addEventListener(\'DOMContentLoaded\',function(){window.brandingFooter.init({"formID":240772950165055,"campaign":"powered_by_jotform_le","isCardForm":false,"isLegacyForm":true})});\tJotForm.isFullSource = true;\r\n\r\n\tJotForm.init(function(){\r\n\t/*INIT-START*/\r\nif (window.JotForm && JotForm.accessible) $(\'input_10\').setAttribute(\'tabindex\',0);\r\nif (window.JotForm && JotForm.accessible) $(\'input_5\').setAttribute(\'tabindex\',0);\r\n      JotForm.alterTexts({"ageVerificationError":"You must be older than {minAge} years old to submit this form.","alphabetic":"This field can only contain letters","alphanumeric":"This field can only contain letters and numbers.","cancelAppointment":"Cancel Appointment","cancelSelection":"Cancel Selection","ccDonationMinLimitError":"Minimum amount is {minAmount} {currency}","ccInvalidCVC":"CVC number is invalid.","ccInvalidExpireDate":"Expire date is invalid.","ccInvalidExpireMonth":"Expiration month is invalid.","ccInvalidExpireYear":"Expiration year is invalid.","ccInvalidNumber":"Credit Card Number is invalid.","ccMissingDetails":"Please fill up the credit card details.","ccMissingDonation":"Please enter numeric values for donation amount.","ccMissingProduct":"Please select at least one product.","characterLimitError":"Too many Characters.  The limit is","characterMinLimitError":"Too few characters. The minimum is","chooseAFile_infoMessage":"Choose a file","confirmClearForm":"Are you sure you want to clear the form","confirmEmail":"E-mail does not match","currency":"This field can only contain currency values.","cyrillic":"This field can only contain cyrillic characters","dateInvalid":"This date is not valid. The date format is {format}","dateInvalidSeparate":"This date is not valid. Enter a valid {element}.","dateLimited":"This date is unavailable.","disallowDecimals":"Please enter a whole number.","doneButton":"Done","doneMessage":"Well done! All errors are fixed.","dragAndDropFilesHere_infoMessage":"Drag and drop files here","email":"Enter a valid e-mail address","error":"Error","fieldError":"field has an error.","fillMask":"Field value must fill mask.","formerSelectedTime":"Former Time","freeEmailError":"Free email accounts are not allowed","generalError":"There are errors on the form. Please fix them before continuing.","generalPageError":"There are errors on this page. Please fix them before continuing.","geoNotAvailableDesc":"Location provider not available. Please enter the address manually.","geoNotAvailableTitle":"Position Unavailable","geoPermissionDesc":"Check your browser\'s privacy settings.","geoPermissionTitle":"Permission Denied","geoTimeoutDesc":"Please check your internet connection and try again.","geoTimeoutTitle":"Timeout","gradingScoreError":"Score total should only be less than or equal to","incompleteFields":"There are incomplete required fields. Please complete them.","inputCarretErrorA":"Input should not be less than the minimum value:","inputCarretErrorB":"Input should not be greater than the maximum value:","invalidTime":"Enter a valid time","justSoldOut":"Just Sold Out","lessThan":"Your score should be less than or equal to","maxCharactersError":"The number of characters should not be more than the maximum value:","maxDigitsError":"The maximum digits allowed is","maxFileSize_infoMessage":"Max. file size","maxSelectionsError":"The maximum number of selections allowed is ","minCharactersError":"The number of characters should not be less than the minimum value:","minSelectionsError":"The minimum required number of selections is ","multipleError":"There are {count} errors on this page. Please correct them before moving on.","multipleFileUploads_emptyError":"{file} is empty, please select files again without it.","multipleFileUploads_fileLimitError":"Only {fileLimit} file uploads allowed.","multipleFileUploads_minSizeError":"{file} is too small, minimum file size is {minSizeLimit}.","multipleFileUploads_onLeave":"The files are being uploaded, if you leave now the upload will be cancelled.","multipleFileUploads_sizeError":"{file} is too large, maximum file size is {sizeLimit}.","multipleFileUploads_typeError":"{file} has invalid extension. Only {extensions} are allowed.","multipleFileUploads_uploadFailed":"File upload failed, please remove it and upload the file again.","nextButtonText":"Next","noSlotsAvailable":"No slots available","notEnoughStock":"Not enough stock for the current selection","notEnoughStock_remainedItems":"Not enough stock for the current selection ({count} items left)","noUploadExtensions":"File has no extension file type (e.g. .txt, .png, .jpeg)","numeric":"This field can only contain numeric values","oneError":"There is {count} error on this page. Please correct it before moving on.","pastDatesDisallowed":"Date must not be in the past.","pleaseWait":"Please wait...","prevButtonText":"Previous","progressMiddleText":"of","required":"This field is required.","requiredLegend":"All fields marked with * are required and must be filled.","requireEveryCell":"Every cell is required.","requireEveryRow":"Every row is required.","requireOne":"At least one field required.","restrictedDomain":"This domain is not allowed","reviewBackText":"Back to Form","reviewSubmitText":"Review and Submit","seeAllText":"See All","seeErrorsButton":"See Errors","selectedTime":"Selected Time","selectionSoldOut":"Selection Sold Out","slotUnavailable":"{time} on {date} has been selected is unavailable. Please select another slot.","soldOut":"Sold Out","startButtonText":"START","submissionLimit":"Sorry! Only one entry is allowed. Multiple submissions are disabled for this form.","submitButtonText":"Submit","subProductItemsLeft":"({count} items left)","uploadExtensions":"You can only upload following files:","uploadFilesize":"File size cannot be bigger than:","uploadFilesizemin":"File size cannot be smaller than:","url":"This field can only contain a valid URL","validateEmail":"You need to validate this e-mail","wordLimitError":"Too many words. The limit is","wordMinLimitError":"Too few words.  The minimum is"});\r\n\t/*INIT-END*/\r\n\t});\r\n\r\n   setTimeout(function() {\r\nJotForm.paymentExtrasOnTheFly([null,null,{"name":"submit2","qid":"2","text":"Kirim","type":"control_button"},null,null,{"description":"","mde":"No","name":"pertanyaan","qid":"5","subLabel":"Text 500","text":"Pertanyaan ","type":"control_textarea","wysiwyg":"Disable"},null,null,null,null,{"description":"","name":"nama","qid":"10","subLabel":"","text":"Nama","type":"control_textbox"},{"name":"kontakKami","qid":"11","text":"Kontak kami","type":"control_head"},null,null,{"description":"","name":"telepon","qid":"14","subLabel":"","text":"Telepon \\u002F whats app","type":"control_number"}]);}, 20); \r\n</script>\r\n<link type="text/css" rel="stylesheet" href="https://cdn01.jotfor.ms/stylebuilder/static/form-common.css?v=8d43c84\r\n"/>\r\n<style type="text/css">@media print{*{-webkit-print-color-adjust: exact !important;color-adjust: exact !important;}.form-section{display:inline!important}.form-pagebreak{display:none!important}.form-section-closed{height:auto!important}.page-section{position:initial!important}}</style>\r\n<link id="custom-font" type="text/css" rel="stylesheet" href="//cdn.jotfor.ms/fonts/?family=Roboto" />\r\n<link type="text/css" rel="stylesheet" href="https://cdn02.jotfor.ms/themes/CSS/5e6b428acc8c4e222d1beb91.css?v=3.3.52465"/>\r\n<link type="text/css" rel="stylesheet" href="https://cdn03.jotfor.ms/css/styles/payment/payment_styles.css?3.3.52465" />\r\n<link type="text/css" rel="stylesheet" href="https://cdn01.jotfor.ms/css/styles/payment/payment_feature.css?3.3.52465" />\r\n<link type="text/css" rel="stylesheet" href="https://cdn02.jotfor.ms/stylebuilder/static/donationBox.css?v=3.3.52465">\r\n<style type="text/css" id="form-designer-style">\r\n    /* Injected CSS Code */\r\n/*PREFERENCES STYLE*/\r\n    .form-all {\r\n      font-family: Roboto, sans-serif;\r\n    }\r\n  \r\n    .form-label.form-label-auto {\r\n      \r\n    display: block;\r\n    float: none;\r\n    text-align: left;\r\n    width: 100%;\r\n  \r\n    }\r\n  \r\n    .form-line {\r\n      margin-top: 12px;\r\n      margin-bottom: 12px;\r\n    }\r\n  \r\n    .form-all {\r\n      max-width: 760px;\r\n      width: 100%;\r\n    }\r\n  \r\n    .form-label.form-label-left,\r\n    .form-label.form-label-right,\r\n    .form-label.form-label-left.form-label-auto,\r\n    .form-label.form-label-right.form-label-auto {\r\n      width: 230px;\r\n    }\r\n  \r\n    .form-all {\r\n      font-size: 16px\r\n    }\r\n  \r\n    .supernova .form-all, .form-all {\r\n      background-color: #FFFFFF;\r\n    }\r\n  \r\n    .form-all {\r\n      color: #2C3345;\r\n    }\r\n    .form-header-group .form-header {\r\n      color: #2C3345;\r\n    }\r\n    .form-header-group .form-subHeader {\r\n      color: #2C3345;\r\n    }\r\n    .form-label-top,\r\n    .form-label-left,\r\n    .form-label-right,\r\n    .form-html,\r\n    .form-checkbox-item label,\r\n    .form-radio-item label,\r\n    span.FITB .qb-checkbox-label,\r\n    span.FITB .qb-radiobox-label,\r\n    span.FITB .form-radio label,\r\n    span.FITB .form-checkbox label,\r\n    [data-blotid][data-type=checkbox] [data-labelid],\r\n    [data-blotid][data-type=radiobox] [data-labelid],\r\n    span.FITB-inptCont[data-type=checkbox] label,\r\n    span.FITB-inptCont[data-type=radiobox] label {\r\n      color: #2C3345;\r\n    }\r\n    .form-sub-label {\r\n      color: #464d5f;\r\n    }\r\n  \r\n  .supernova {\r\n    background-color: #ffffff;\r\n  }\r\n  .supernova body {\r\n    background: transparent;\r\n  }\r\n  \r\n    .form-textbox,\r\n    .form-textarea,\r\n    .form-dropdown,\r\n    .form-radio-other-input,\r\n    .form-checkbox-other-input,\r\n    .form-captcha input,\r\n    .form-spinner input {\r\n      background-color: #FFFFFF;\r\n    }\r\n  \r\n      \r\n    .supernova {\r\n      background-repeat: no-repeat;\r\n      background-size:cover;\r\n      background-attachment: fixed;\r\n      background-position: center top;\r\n    }\r\n\r\n      .supernova, #stage {\r\n        background-image: none;\r\n      }\r\n    \r\n      .form-all {\r\n        background-image: none;\r\n      }\r\n    /*PREFERENCES STYLE*//*__INSPECT_SEPERATOR__*/\r\n.form-label.form-label-auto {\r\n        \r\n      display: block;\r\n      float: none;\r\n      text-align: left;\r\n      width: 100%;\r\n    \r\n      }\r\n    /* Injected CSS Code */\r\n</style>\r\n\r\n<form class="jotform-form" onsubmit="return typeof testSubmitFunction !== \'undefined\' && testSubmitFunction();" action="https://submit.jotform.com/submit/240772950165055" method="post" name="form_240772950165055" id="240772950165055" accept-charset="utf-8" autocomplete="on"><input type="hidden" name="formID" value="240772950165055" /><input type="hidden" id="JWTContainer" value="" /><input type="hidden" id="cardinalOrderNumber" value="" /><input type="hidden" id="jsExecutionTracker" name="jsExecutionTracker" value="build-date-1710817155008" /><input type="hidden" id="submitSource" name="submitSource" value="unknown" /><input type="hidden" id="buildDate" name="buildDate" value="1710817155008" />\r\n  <div role="main" class="form-all">\r\n    <ul class="form-section page-section">\r\n      <li id="cid_11" class="form-input-wide" data-type="control_head">\r\n        <div class="form-header-group  header-large">\r\n          <div class="header-text httal htvam">\r\n            <h1 id="header_11" class="form-header" data-component="header">Kontak kami</h1>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class="form-line jf-required" data-type="control_textbox" id="id_10"><label class="form-label form-label-top form-label-auto" id="label_10" for="input_10" aria-hidden="false"> Nama<span class="form-required">*</span> </label>\r\n        <div id="cid_10" class="form-input-wide jf-required" data-layout="half"> <input type="text" id="input_10" name="q10_nama" data-type="input-textbox" class="form-textbox validate[required]" data-defaultvalue="" style="width:310px" size="310" data-component="textbox" aria-labelledby="label_10" required="" value="" /> </div>\r\n      </li>\r\n      <li class="form-line jf-required" data-type="control_number" id="id_14"><label class="form-label form-label-top form-label-auto" id="label_14" for="input_14" aria-hidden="false"> Telepon / whats app<span class="form-required">*</span> </label>\r\n        <div id="cid_14" class="form-input-wide jf-required" data-layout="half"> <input type="number" id="input_14" name="q14_telepon" data-type="input-number" class=" form-number-input form-textbox validate[required]" data-defaultvalue="" style="width:310px" size="310" placeholder="(62)" data-component="number" aria-labelledby="label_14" required="" step="any" value="" /> </div>\r\n      </li>\r\n      <li class="form-line jf-required" data-type="control_textarea" id="id_5"><label class="form-label form-label-top form-label-auto" id="label_5" for="input_5" aria-hidden="false"> Pertanyaan <span class="form-required">*</span> </label>\r\n        <div id="cid_5" class="form-input-wide jf-required" data-layout="full"> <span class="form-sub-label-container" style="vertical-align:top"><textarea id="input_5" class="form-textarea validate[required]" name="q5_pertanyaan" style="width:648px;height:163px" data-component="textarea" required="" aria-labelledby="label_5 sublabel_input_5"></textarea><label class="form-sub-label" for="input_5" id="sublabel_input_5" style="min-height:13px">Text 500</label></span> </div>\r\n      </li>\r\n      <li class="form-line" data-type="control_button" id="id_2">\r\n        <div id="cid_2" class="form-input-wide" data-layout="full">\r\n          <div data-align="left" class="form-buttons-wrapper form-buttons-left   jsTest-button-wrapperField"><button id="input_2" type="submit" class="form-submit-button form-submit-button-red-500 submit-button jf-form-buttons jsTest-submitField" data-component="button" data-content="">Kirim</button></div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <script type="text/javascript">\r\n    var all_spc = document.querySelectorAll("form[id=\'240772950165055\'] .si" + "mple" + "_spc");\r\n    for (var i = 0; i < all_spc.length; i++)\r\n    {\r\n      all_spc[i].value = "240772950165055-240772950165055";\r\n    }\r\n  </script>\r\n</form><'
                    : '<script src="https://cdn03.jotfor.ms/static/prototype.forms.js?v=3.3.52465" type="text/javascript"></script>\r\n<script src="https://cdn01.jotfor.ms/static/jotform.forms.js?v=3.3.52465" type="text/javascript"></script>\r\n<script src="https://cdn01.jotfor.ms/s/umd/22347ad37de/for-form-branding-footer.js?v=3.3.52465" type="text/javascript" defer></script>\r\n<script src="https://cdn02.jotfor.ms/js/vendor/smoothscroll.min.js?v=3.3.52465" type="text/javascript"></script>\r\n<script src="https://cdn03.jotfor.ms/js/errorNavigation.js?v=3.3.52465" type="text/javascript"></script>\r\n<script type="text/javascript">\tJotForm.newDefaultTheme = true;\r\n\tJotForm.extendsNewTheme = false;\r\n\tJotForm.singleProduct = false;\r\n\tJotForm.newPaymentUIForNewCreatedForms = true;\r\n\tJotForm.texts = {"confirmEmail":"E-mail does not match","pleaseWait":"Please wait...","validateEmail":"You need to validate this e-mail","confirmClearForm":"Are you sure you want to clear the form","lessThan":"Your score should be less than or equal to","incompleteFields":"There are incomplete required fields. Please complete them.","required":"This field is required.","requireOne":"At least one field required.","requireEveryRow":"Every row is required.","requireEveryCell":"Every cell is required.","email":"Enter a valid e-mail address","alphabetic":"This field can only contain letters","numeric":"This field can only contain numeric values","alphanumeric":"This field can only contain letters and numbers.","cyrillic":"This field can only contain cyrillic characters","url":"This field can only contain a valid URL","currency":"This field can only contain currency values.","fillMask":"Field value must fill mask.","uploadExtensions":"You can only upload following files:","noUploadExtensions":"File has no extension file type (e.g. .txt, .png, .jpeg)","uploadFilesize":"File size cannot be bigger than:","uploadFilesizemin":"File size cannot be smaller than:","gradingScoreError":"Score total should only be less than or equal to","inputCarretErrorA":"Input should not be less than the minimum value:","inputCarretErrorB":"Input should not be greater than the maximum value:","maxDigitsError":"The maximum digits allowed is","minCharactersError":"The number of characters should not be less than the minimum value:","maxCharactersError":"The number of characters should not be more than the maximum value:","freeEmailError":"Free email accounts are not allowed","minSelectionsError":"The minimum required number of selections is ","maxSelectionsError":"The maximum number of selections allowed is ","pastDatesDisallowed":"Date must not be in the past.","dateLimited":"This date is unavailable.","dateInvalid":"This date is not valid. The date format is {format}","dateInvalidSeparate":"This date is not valid. Enter a valid {element}.","ageVerificationError":"You must be older than {minAge} years old to submit this form.","multipleFileUploads_typeError":"{file} has invalid extension. Only {extensions} are allowed.","multipleFileUploads_sizeError":"{file} is too large, maximum file size is {sizeLimit}.","multipleFileUploads_minSizeError":"{file} is too small, minimum file size is {minSizeLimit}.","multipleFileUploads_emptyError":"{file} is empty, please select files again without it.","multipleFileUploads_uploadFailed":"File upload failed, please remove it and upload the file again.","multipleFileUploads_onLeave":"The files are being uploaded, if you leave now the upload will be cancelled.","multipleFileUploads_fileLimitError":"Only {fileLimit} file uploads allowed.","dragAndDropFilesHere_infoMessage":"Drag and drop files here","chooseAFile_infoMessage":"Choose a file","maxFileSize_infoMessage":"Max. file size","generalError":"There are errors on the form. Please fix them before continuing.","generalPageError":"There are errors on this page. Please fix them before continuing.","wordLimitError":"Too many words. The limit is","wordMinLimitError":"Too few words.  The minimum is","characterLimitError":"Too many Characters.  The limit is","characterMinLimitError":"Too few characters. The minimum is","ccInvalidNumber":"Credit Card Number is invalid.","ccInvalidCVC":"CVC number is invalid.","ccInvalidExpireDate":"Expire date is invalid.","ccInvalidExpireMonth":"Expiration month is invalid.","ccInvalidExpireYear":"Expiration year is invalid.","ccMissingDetails":"Please fill up the credit card details.","ccMissingProduct":"Please select at least one product.","ccMissingDonation":"Please enter numeric values for donation amount.","disallowDecimals":"Please enter a whole number.","restrictedDomain":"This domain is not allowed","ccDonationMinLimitError":"Minimum amount is {minAmount} {currency}","requiredLegend":"All fields marked with * are required and must be filled.","geoPermissionTitle":"Permission Denied","geoPermissionDesc":"Check your browser\'s privacy settings.","geoNotAvailableTitle":"Position Unavailable","geoNotAvailableDesc":"Location provider not available. Please enter the address manually.","geoTimeoutTitle":"Timeout","geoTimeoutDesc":"Please check your internet connection and try again.","selectedTime":"Selected Time","formerSelectedTime":"Former Time","cancelAppointment":"Cancel Appointment","cancelSelection":"Cancel Selection","noSlotsAvailable":"No slots available","slotUnavailable":"{time} on {date} has been selected is unavailable. Please select another slot.","multipleError":"There are {count} errors on this page. Please correct them before moving on.","oneError":"There is {count} error on this page. Please correct it before moving on.","doneMessage":"Well done! All errors are fixed.","invalidTime":"Enter a valid time","doneButton":"Done","reviewSubmitText":"Review and Submit","nextButtonText":"Next","prevButtonText":"Previous","seeErrorsButton":"See Errors","notEnoughStock":"Not enough stock for the current selection","notEnoughStock_remainedItems":"Not enough stock for the current selection ({count} items left)","soldOut":"Sold Out","justSoldOut":"Just Sold Out","selectionSoldOut":"Selection Sold Out","subProductItemsLeft":"({count} items left)","startButtonText":"START","submitButtonText":"Submit","submissionLimit":"Sorry! Only one entry is allowed. Multiple submissions are disabled for this form.","reviewBackText":"Back to Form","seeAllText":"See All","progressMiddleText":"of","fieldError":"field has an error.","error":"Error"};\r\n\tJotForm.newPaymentUI = true;\r\n\tJotForm.replaceTagTest = true;\r\n\tJotForm.clearFieldOnHide="disable";\r\n\tJotForm.submitError="jumpToFirstError";\r\n\twindow.addEventListener(\'DOMContentLoaded\',function(){window.brandingFooter.init({"formID":240772950165055,"campaign":"powered_by_jotform_le","isCardForm":false,"isLegacyForm":true})});\tJotForm.isFullSource = true;\r\n\r\n\tJotForm.init(function(){\r\n\t/*INIT-START*/\r\nif (window.JotForm && JotForm.accessible) $(\'input_10\').setAttribute(\'tabindex\',0);\r\nif (window.JotForm && JotForm.accessible) $(\'input_5\').setAttribute(\'tabindex\',0);\r\n      JotForm.alterTexts({"ageVerificationError":"You must be older than {minAge} years old to submit this form.","alphabetic":"This field can only contain letters","alphanumeric":"This field can only contain letters and numbers.","cancelAppointment":"Cancel Appointment","cancelSelection":"Cancel Selection","ccDonationMinLimitError":"Minimum amount is {minAmount} {currency}","ccInvalidCVC":"CVC number is invalid.","ccInvalidExpireDate":"Expire date is invalid.","ccInvalidExpireMonth":"Expiration month is invalid.","ccInvalidExpireYear":"Expiration year is invalid.","ccInvalidNumber":"Credit Card Number is invalid.","ccMissingDetails":"Please fill up the credit card details.","ccMissingDonation":"Please enter numeric values for donation amount.","ccMissingProduct":"Please select at least one product.","characterLimitError":"Too many Characters.  The limit is","characterMinLimitError":"Too few characters. The minimum is","chooseAFile_infoMessage":"Choose a file","confirmClearForm":"Are you sure you want to clear the form","confirmEmail":"E-mail does not match","currency":"This field can only contain currency values.","cyrillic":"This field can only contain cyrillic characters","dateInvalid":"This date is not valid. The date format is {format}","dateInvalidSeparate":"This date is not valid. Enter a valid {element}.","dateLimited":"This date is unavailable.","disallowDecimals":"Please enter a whole number.","doneButton":"Done","doneMessage":"Well done! All errors are fixed.","dragAndDropFilesHere_infoMessage":"Drag and drop files here","email":"Enter a valid e-mail address","error":"Error","fieldError":"field has an error.","fillMask":"Field value must fill mask.","formerSelectedTime":"Former Time","freeEmailError":"Free email accounts are not allowed","generalError":"There are errors on the form. Please fix them before continuing.","generalPageError":"There are errors on this page. Please fix them before continuing.","geoNotAvailableDesc":"Location provider not available. Please enter the address manually.","geoNotAvailableTitle":"Position Unavailable","geoPermissionDesc":"Check your browser\'s privacy settings.","geoPermissionTitle":"Permission Denied","geoTimeoutDesc":"Please check your internet connection and try again.","geoTimeoutTitle":"Timeout","gradingScoreError":"Score total should only be less than or equal to","incompleteFields":"There are incomplete required fields. Please complete them.","inputCarretErrorA":"Input should not be less than the minimum value:","inputCarretErrorB":"Input should not be greater than the maximum value:","invalidTime":"Enter a valid time","justSoldOut":"Just Sold Out","lessThan":"Your score should be less than or equal to","maxCharactersError":"The number of characters should not be more than the maximum value:","maxDigitsError":"The maximum digits allowed is","maxFileSize_infoMessage":"Max. file size","maxSelectionsError":"The maximum number of selections allowed is ","minCharactersError":"The number of characters should not be less than the minimum value:","minSelectionsError":"The minimum required number of selections is ","multipleError":"There are {count} errors on this page. Please correct them before moving on.","multipleFileUploads_emptyError":"{file} is empty, please select files again without it.","multipleFileUploads_fileLimitError":"Only {fileLimit} file uploads allowed.","multipleFileUploads_minSizeError":"{file} is too small, minimum file size is {minSizeLimit}.","multipleFileUploads_onLeave":"The files are being uploaded, if you leave now the upload will be cancelled.","multipleFileUploads_sizeError":"{file} is too large, maximum file size is {sizeLimit}.","multipleFileUploads_typeError":"{file} has invalid extension. Only {extensions} are allowed.","multipleFileUploads_uploadFailed":"File upload failed, please remove it and upload the file again.","nextButtonText":"Next","noSlotsAvailable":"No slots available","notEnoughStock":"Not enough stock for the current selection","notEnoughStock_remainedItems":"Not enough stock for the current selection ({count} items left)","noUploadExtensions":"File has no extension file type (e.g. .txt, .png, .jpeg)","numeric":"This field can only contain numeric values","oneError":"There is {count} error on this page. Please correct it before moving on.","pastDatesDisallowed":"Date must not be in the past.","pleaseWait":"Please wait...","prevButtonText":"Previous","progressMiddleText":"of","required":"This field is required.","requiredLegend":"All fields marked with * are required and must be filled.","requireEveryCell":"Every cell is required.","requireEveryRow":"Every row is required.","requireOne":"At least one field required.","restrictedDomain":"This domain is not allowed","reviewBackText":"Back to Form","reviewSubmitText":"Review and Submit","seeAllText":"See All","seeErrorsButton":"See Errors","selectedTime":"Selected Time","selectionSoldOut":"Selection Sold Out","slotUnavailable":"{time} on {date} has been selected is unavailable. Please select another slot.","soldOut":"Sold Out","startButtonText":"START","submissionLimit":"Sorry! Only one entry is allowed. Multiple submissions are disabled for this form.","submitButtonText":"Submit","subProductItemsLeft":"({count} items left)","uploadExtensions":"You can only upload following files:","uploadFilesize":"File size cannot be bigger than:","uploadFilesizemin":"File size cannot be smaller than:","url":"This field can only contain a valid URL","validateEmail":"You need to validate this e-mail","wordLimitError":"Too many words. The limit is","wordMinLimitError":"Too few words.  The minimum is"});\r\n\t/*INIT-END*/\r\n\t});\r\n\r\n   setTimeout(function() {\r\nJotForm.paymentExtrasOnTheFly([null,null,{"name":"submit2","qid":"2","text":"Kirim","type":"control_button"},null,null,{"description":"","mde":"No","name":"pertanyaan","qid":"5","subLabel":"Text 500","text":"Pertanyaan ","type":"control_textarea","wysiwyg":"Disable"},null,null,null,null,{"description":"","name":"nama","qid":"10","subLabel":"","text":"Nama","type":"control_textbox"},{"name":"kontakKami","qid":"11","text":"Kontak kami","type":"control_head"},null,null,{"description":"","name":"telepon","qid":"14","subLabel":"","text":"Telepon \\u002F whats app","type":"control_number"}]);}, 20); \r\n</script>\r\n<link type="text/css" rel="stylesheet" href="https://cdn01.jotfor.ms/stylebuilder/static/form-common.css?v=8d43c84\r\n"/>\r\n<style type="text/css">@media print{*{-webkit-print-color-adjust: exact !important;color-adjust: exact !important;}.form-section{display:inline!important}.form-pagebreak{display:none!important}.form-section-closed{height:auto!important}.page-section{position:initial!important}}</style>\r\n<link id="custom-font" type="text/css" rel="stylesheet" href="//cdn.jotfor.ms/fonts/?family=Roboto" />\r\n<link type="text/css" rel="stylesheet" href="https://cdn02.jotfor.ms/themes/CSS/5e6b428acc8c4e222d1beb91.css?v=3.3.52465"/>\r\n<link type="text/css" rel="stylesheet" href="https://cdn03.jotfor.ms/css/styles/payment/payment_styles.css?3.3.52465" />\r\n<link type="text/css" rel="stylesheet" href="https://cdn01.jotfor.ms/css/styles/payment/payment_feature.css?3.3.52465" />\r\n<link type="text/css" rel="stylesheet" href="https://cdn02.jotfor.ms/stylebuilder/static/donationBox.css?v=3.3.52465">\r\n<style type="text/css" id="form-designer-style">\r\n    /* Injected CSS Code */\r\n/*PREFERENCES STYLE*/\r\n    .form-all {\r\n      font-family: Roboto, sans-serif;\r\n    }\r\n  \r\n    .form-label.form-label-auto {\r\n      \r\n    display: block;\r\n    float: none;\r\n    text-align: left;\r\n    width: 100%;\r\n  \r\n    }\r\n  \r\n    .form-line {\r\n      margin-top: 12px;\r\n      margin-bottom: 12px;\r\n    }\r\n  \r\n    .form-all {\r\n      max-width: 760px;\r\n      width: 100%;\r\n    }\r\n  \r\n    .form-label.form-label-left,\r\n    .form-label.form-label-right,\r\n    .form-label.form-label-left.form-label-auto,\r\n    .form-label.form-label-right.form-label-auto {\r\n      width: 230px;\r\n    }\r\n  \r\n    .form-all {\r\n      font-size: 16px\r\n    }\r\n  \r\n    .supernova .form-all, .form-all {\r\n      background-color: #FFFFFF;\r\n    }\r\n  \r\n    .form-all {\r\n      color: #2C3345;\r\n    }\r\n    .form-header-group .form-header {\r\n      color: #2C3345;\r\n    }\r\n    .form-header-group .form-subHeader {\r\n      color: #2C3345;\r\n    }\r\n    .form-label-top,\r\n    .form-label-left,\r\n    .form-label-right,\r\n    .form-html,\r\n    .form-checkbox-item label,\r\n    .form-radio-item label,\r\n    span.FITB .qb-checkbox-label,\r\n    span.FITB .qb-radiobox-label,\r\n    span.FITB .form-radio label,\r\n    span.FITB .form-checkbox label,\r\n    [data-blotid][data-type=checkbox] [data-labelid],\r\n    [data-blotid][data-type=radiobox] [data-labelid],\r\n    span.FITB-inptCont[data-type=checkbox] label,\r\n    span.FITB-inptCont[data-type=radiobox] label {\r\n      color: #2C3345;\r\n    }\r\n    .form-sub-label {\r\n      color: #464d5f;\r\n    }\r\n  \r\n  .supernova {\r\n    background-color: #ffffff;\r\n  }\r\n  .supernova body {\r\n    background: transparent;\r\n  }\r\n  \r\n    .form-textbox,\r\n    .form-textarea,\r\n    .form-dropdown,\r\n    .form-radio-other-input,\r\n    .form-checkbox-other-input,\r\n    .form-captcha input,\r\n    .form-spinner input {\r\n      background-color: #FFFFFF;\r\n    }\r\n  \r\n      \r\n    .supernova {\r\n      background-repeat: no-repeat;\r\n      background-size:cover;\r\n      background-attachment: fixed;\r\n      background-position: center top;\r\n    }\r\n\r\n      .supernova, #stage {\r\n        background-image: none;\r\n      }\r\n    \r\n      .form-all {\r\n        background-image: none;\r\n      }\r\n    /*PREFERENCES STYLE*//*__INSPECT_SEPERATOR__*/\r\n.form-label.form-label-auto {\r\n        \r\n      display: block;\r\n      float: none;\r\n      text-align: left;\r\n      width: 100%;\r\n    \r\n      }\r\n    /* Injected CSS Code */\r\n</style>\r\n\r\n<form class="jotform-form" onsubmit="return typeof testSubmitFunction !== \'undefined\' && testSubmitFunction();" action="https://submit.jotform.com/submit/240772950165055" method="post" name="form_240772950165055" id="240772950165055" accept-charset="utf-8" autocomplete="on"><input type="hidden" name="formID" value="240772950165055" /><input type="hidden" id="JWTContainer" value="" /><input type="hidden" id="cardinalOrderNumber" value="" /><input type="hidden" id="jsExecutionTracker" name="jsExecutionTracker" value="build-date-1710817155008" /><input type="hidden" id="submitSource" name="submitSource" value="unknown" /><input type="hidden" id="buildDate" name="buildDate" value="1710817155008" />\r\n  <div role="main" class="form-all">\r\n    <ul class="form-section page-section">\r\n      <li id="cid_11" class="form-input-wide" data-type="control_head">\r\n        <div class="form-header-group  header-large">\r\n          <div class="header-text httal htvam">\r\n            <h1 id="header_11" class="form-header" data-component="header">Kontak kami</h1>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class="form-line jf-required" data-type="control_textbox" id="id_10"><label class="form-label form-label-top form-label-auto" id="label_10" for="input_10" aria-hidden="false"> Nama<span class="form-required">*</span> </label>\r\n        <div id="cid_10" class="form-input-wide jf-required" data-layout="half"> <input type="text" id="input_10" name="q10_nama" data-type="input-textbox" class="form-textbox validate[required]" data-defaultvalue="" style="width:310px" size="310" data-component="textbox" aria-labelledby="label_10" required="" value="" /> </div>\r\n      </li>\r\n      <li class="form-line jf-required" data-type="control_number" id="id_14"><label class="form-label form-label-top form-label-auto" id="label_14" for="input_14" aria-hidden="false"> Telepon / whats app<span class="form-required">*</span> </label>\r\n        <div id="cid_14" class="form-input-wide jf-required" data-layout="half"> <input type="number" id="input_14" name="q14_telepon" data-type="input-number" class=" form-number-input form-textbox validate[required]" data-defaultvalue="" style="width:310px" size="310" placeholder="(62)" data-component="number" aria-labelledby="label_14" required="" step="any" value="" /> </div>\r\n      </li>\r\n      <li class="form-line jf-required" data-type="control_textarea" id="id_5"><label class="form-label form-label-top form-label-auto" id="label_5" for="input_5" aria-hidden="false"> Pertanyaan <span class="form-required">*</span> </label>\r\n        <div id="cid_5" class="form-input-wide jf-required" data-layout="full"> <span class="form-sub-label-container" style="vertical-align:top"><textarea id="input_5" class="form-textarea validate[required]" name="q5_pertanyaan" style="width:648px;height:163px" data-component="textarea" required="" aria-labelledby="label_5 sublabel_input_5"></textarea><label class="form-sub-label" for="input_5" id="sublabel_input_5" style="min-height:13px">Text 500</label></span> </div>\r\n      </li>\r\n      <li class="form-line" data-type="control_button" id="id_2">\r\n        <div id="cid_2" class="form-input-wide" data-layout="full">\r\n          <div data-align="left" class="form-buttons-wrapper form-buttons-left   jsTest-button-wrapperField"><button id="input_2" type="submit" class="form-submit-button form-submit-button-red-500 submit-button jf-form-buttons jsTest-submitField" data-component="button" data-content="">Kirim</button></div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <script type="text/javascript">\r\n    var all_spc = document.querySelectorAll("form[id=\'240772950165055\'] .si" + "mple" + "_spc");\r\n    for (var i = 0; i < all_spc.length; i++)\r\n    {\r\n      all_spc[i].value = "240772950165055-240772950165055";\r\n    }\r\n  </script>\r\n</form><'
                }
              />
            </section>
            <section className={classNames(projectcss.all, sty.section__rIkBk)}>
              <div className={classNames(projectcss.all, sty.columns___2Cl4)}>
                <div className={classNames(projectcss.all, sty.column__gxdyY)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__zhdkO)}
                  >
                    <LocationPinSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg___5Fk8D)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dR6Ug
                      )}
                    >
                      {"Kontak Kami"}
                    </div>
                  </div>
                  <section
                    className={classNames(projectcss.all, sty.section__sk8Bl)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___85S1H
                      )}
                    >
                      {"Pembelian Unit / Kerjasama\n0812-8105-908"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1Tk
                      )}
                    >
                      {"Email\nuwinfly.mitra@gmail.com"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kkQp9
                      )}
                    >
                      {"Jam Kerja\nSenin - Jumat 8:00 - 17:00 WIB"}
                    </div>
                  </section>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.columns__vs5A)}>
                <div className={classNames(projectcss.all, sty.column__z13Qm)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sffp1)}
                  >
                    <LocationArrowSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg__hwG6Y)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___80YIs
                      )}
                    >
                      {"maps"}
                    </div>
                  </div>
                  <section
                    className={classNames(projectcss.all, sty.section__b5Gr)}
                  >
                    <Embed
                      className={classNames(
                        "__wab_instance",
                        sty.embedHtml__vtv1O
                      )}
                      code={
                        '<div style="max-width:100%;list-style:none; transition: none;overflow:hidden;height:300px;"><div id="embed-map-canvas" style="height:100%; width:100%;max-width:100%;"><iframe width="820" height="560" id="gmap_canvas" src="https://maps.google.com/maps?q=Jl.+Raya+Gandul++No.1+Kel.+Gandul%2C+Kec.+Cinere%2C+Kota+Depok&t=&z=13&ie=UTF8&iwloc=&output=embed" frameborder="0" scrolling="no" marginheight="0" marginwidth="0"></iframe></div><a class="embed-ded-maphtml" rel="nofollow" href="https://www.bootstrapskins.com/themes" id="inject-map-data">premium bootstrap themes</a><style>#embed-map-canvas img{max-height:none;max-width:none!important;background:none!important;}</style></div>'
                      }
                    />
                  </section>
                </div>
              </div>
            </section>
          </section>
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <Stack__
              as={"div"}
              data-plasmic-name={"clientsSection6"}
              data-plasmic-override={overrides.clientsSection6}
              hasGap={true}
              className={classNames(projectcss.all, sty.clientsSection6)}
            >
              {(() => {
                const child$Props = {
                  className: classNames("__wab_instance", sty.form2),
                  extendedOnValuesChange:
                    generateStateOnChangePropForCodeComponents(
                      $state,
                      "value",
                      ["form2", "value"],
                      FormWrapper_Helpers
                    ),
                  formItems: undefined,
                  labelCol: { span: 8, horizontalOnly: true },
                  layout: "vertical",
                  mode: undefined,
                  onIsSubmittingChange:
                    generateStateOnChangePropForCodeComponents(
                      $state,
                      "isSubmitting",
                      ["form2", "isSubmitting"],
                      FormWrapper_Helpers
                    ),
                  ref: ref => {
                    $refs["form2"] = ref;
                  },
                  wrapperCol: { span: 16, horizontalOnly: true }
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "value",
                      plasmicStateName: "form2.value"
                    },
                    {
                      name: "isSubmitting",
                      plasmicStateName: "form2.isSubmitting"
                    }
                  ],
                  [],
                  FormWrapper_Helpers ?? {},
                  child$Props
                );

                return (
                  <FormWrapper
                    data-plasmic-name={"form2"}
                    data-plasmic-override={overrides.form2}
                    {...child$Props}
                  >
                    <FormItemWrapper
                      className={classNames(
                        "__wab_instance",
                        sty.formField___5PiS
                      )}
                      label={"Name"}
                      name={"name"}
                    >
                      <AntdInput
                        className={classNames(
                          "__wab_instance",
                          sty.input__b3Cua
                        )}
                      />
                    </FormItemWrapper>
                    <FormItemWrapper
                      className={classNames(
                        "__wab_instance",
                        sty.formField__neGqP
                      )}
                      hidden={false}
                      label={"Telepon"}
                    >
                      <AntdInput
                        className={classNames(
                          "__wab_instance",
                          sty.input__vh2Ww
                        )}
                      />
                    </FormItemWrapper>
                    <FormItemWrapper
                      className={classNames(
                        "__wab_instance",
                        sty.formField__asXpL
                      )}
                      label={"Message"}
                      name={"message"}
                    >
                      <AntdTextArea
                        className={classNames("__wab_instance", sty.textArea)}
                      />
                    </FormItemWrapper>
                    <AntdButton
                      className={classNames(
                        "__wab_instance",
                        sty.button__zLYey
                      )}
                      submitsForm={true}
                      type={"primary"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0N3K9
                        )}
                      >
                        {"Kirim"}
                      </div>
                    </AntdButton>
                  </FormWrapper>
                );
              })()}
              <section
                className={classNames(projectcss.all, sty.section__ibVz8)}
              >
                <section
                  className={classNames(projectcss.all, sty.section__ifV3G)}
                >
                  <section
                    className={classNames(projectcss.all, sty.section__n6RCf)}
                  >
                    <section
                      className={classNames(projectcss.all, sty.section__xp7Du)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns___08VMa
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__s9Sf
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lOtN
                            )}
                          >
                            {"Pertanyaan sering di ajukan ?"}
                          </div>
                          <ArrowOpenRightSvgrepoComsvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__vT4UF
                            )}
                            role={"img"}
                          />
                        </div>
                      </div>
                    </section>
                  </section>
                  {(() => {
                    const child$Props = {
                      activeKey: generateStateValueProp($state, [
                        "accordion2",
                        "activePanelId"
                      ]),
                      bordered: true,
                      className: classNames("__wab_instance", sty.accordion2),
                      items: (
                        <React.Fragment>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem__i87Do
                            )}
                            id={1}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___7KGbw
                                )}
                              >
                                {
                                  "Bagaimana caranya & syarat-syarat untuk pembukaan distributor atau waralaba dengan uwinflay? "
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jRa1
                              )}
                            >
                              {"First Children"}
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem__we1Xo
                            )}
                            id={2}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__lfvct
                                )}
                              >
                                {"Apakah bisa buka toko di rumah sendiri? "}
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__aissc
                              )}
                            >
                              {"Second Children"}
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem___6P5Uk
                            )}
                            id={"3"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__g82Do
                                )}
                              >
                                {
                                  "Apakah barang diantar sampai toko & bagaimana dengan ongkos kirimnya? "
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jnMb
                              )}
                            >
                              {"Second Children"}
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem__jw5YJ
                            )}
                            id={"4"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__uYucq
                                )}
                              >
                                {"Apakah ada minimal pemesanan? "}
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wBzZz
                              )}
                            >
                              {"Second Children"}
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem__d0PYd
                            )}
                            id={"5"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__leykL
                                )}
                              >
                                {
                                  "Apakah harganya lebih murah dibandingkan distributor? "
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__nKfiB
                              )}
                            >
                              {"Second Children"}
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem__q0DhE
                            )}
                            id={"6"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__wspjr
                                )}
                              >
                                {
                                  "Apakah tokonya menggunakan nama uwinflay? Berapa lama waktu sampai buka toko? "
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__weJU
                              )}
                            >
                              {"Second Children"}
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem__p17LJ
                            )}
                            id={"7"}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__aaMj
                                )}
                              >
                                {"Apakah boleh berjualan produk lain?"}
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__l06G0
                              )}
                            >
                              {"Second Children"}
                            </div>
                          </AntdAccordionItem>
                        </React.Fragment>
                      ),
                      onChange: generateStateOnChangePropForCodeComponents(
                        $state,
                        "activePanelId",
                        ["accordion2", "activePanelId"],
                        AntdAccordion_Helpers
                      )
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "activePanelId",
                          plasmicStateName: "accordion2.activePanelId"
                        }
                      ],
                      [],
                      AntdAccordion_Helpers ?? {},
                      child$Props
                    );

                    return (
                      <AntdAccordion
                        data-plasmic-name={"accordion2"}
                        data-plasmic-override={overrides.accordion2}
                        {...child$Props}
                      />
                    );
                  })()}
                </section>
              </section>
            </Stack__>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <section className={classNames(projectcss.all, sty.section__tOiVm)}>
              <div className={classNames(projectcss.all, sty.columns__vkv7R)}>
                <div className={classNames(projectcss.all, sty.column__tTin)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___67Urf
                    )}
                  >
                    {"Pertanyaan sering di ajukan ?"}
                  </div>
                </div>
              </div>
            </section>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <section className={classNames(projectcss.all, sty.section__kdXg7)}>
              <div className={classNames(projectcss.all, sty.columns__gogQd)}>
                <div className={classNames(projectcss.all, sty.column__mwPS)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4Lo4I
                    )}
                  >
                    {"Pertanyaan sering di ajukan ?"}
                  </div>
                </div>
              </div>
            </section>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false)
            ? (() => {
                const child$Props = {
                  activeKey: generateStateValueProp($state, [
                    "accordion3",
                    "activePanelId"
                  ]),
                  bordered: true,
                  className: classNames("__wab_instance", sty.accordion3),
                  items: (
                    <React.Fragment>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__mLdG
                        )}
                        id={1}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wpqDw
                            )}
                          >
                            {
                              "Bagaimana caranya & syarat-syarat untuk pembukaan distributor atau waralaba dengan uwinflay? "
                            }
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__sKqn
                          )}
                        >
                          {"First Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem___2Ut56
                        )}
                        id={2}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___58Bo
                            )}
                          >
                            {"Apakah bisa buka toko di rumah sendiri? "}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cumpU
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__xy2VG
                        )}
                        id={"3"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__d6ScS
                            )}
                          >
                            {
                              "Apakah barang diantar sampai toko & bagaimana dengan ongkos kirimnya? "
                            }
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dn924
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__kaMcX
                        )}
                        id={"4"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__auTz
                            )}
                          >
                            {"Apakah ada minimal pemesanan? "}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uKm7N
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__kjwLl
                        )}
                        id={"5"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xkgOn
                            )}
                          >
                            {
                              "Apakah harganya lebih murah dibandingkan distributor? "
                            }
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7Gwy
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__cNi2N
                        )}
                        id={"6"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___1IB6B
                            )}
                          >
                            {
                              "Apakah tokonya menggunakan nama uwinflay? Berapa lama waktu sampai buka toko? "
                            }
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___1QA7N
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__j1Di3
                        )}
                        id={"7"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vtBxn
                            )}
                          >
                            {"Apakah boleh berjualan produk lain?"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aJxu
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                    </React.Fragment>
                  ),
                  onChange: generateStateOnChangePropForCodeComponents(
                    $state,
                    "activePanelId",
                    ["accordion3", "activePanelId"],
                    AntdAccordion_Helpers
                  )
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "activePanelId",
                      plasmicStateName: "accordion3.activePanelId"
                    }
                  ],
                  [],
                  AntdAccordion_Helpers ?? {},
                  child$Props
                );

                return (
                  <AntdAccordion
                    data-plasmic-name={"accordion3"}
                    data-plasmic-override={overrides.accordion3}
                    {...child$Props}
                  />
                );
              })()
            : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : false) ? (
            <section className={classNames(projectcss.all, sty.section__p8BFy)}>
              <section
                className={classNames(projectcss.all, sty.section__rziAo)}
              >
                <div className={classNames(projectcss.all, sty.columns__b7YdC)}>
                  <div
                    className={classNames(projectcss.all, sty.column__y82Og)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iJn16
                      )}
                    >
                      {"Pertanyaan sering di ajukan ?"}
                    </div>
                    <ArrowOpenRightSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg__wxAou)}
                      role={"img"}
                    />
                  </div>
                </div>
                <section
                  className={classNames(projectcss.all, sty.section__zgrKr)}
                >
                  <div
                    className={classNames(projectcss.all, sty.columns__p7VlK)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__yzfTx)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__t8Gqq
                        )}
                      >
                        {"Pertanyaan sering di ajukan ?"}
                      </div>
                      <ArrowOpenRightSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__k2J3U)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </section>
              </section>
              {(() => {
                const child$Props = {
                  activeKey: generateStateValueProp($state, [
                    "accordion4",
                    "activePanelId"
                  ]),
                  bordered: true,
                  className: classNames("__wab_instance", sty.accordion4),
                  items: (
                    <React.Fragment>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem___7Ruy1
                        )}
                        id={1}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8WDDo
                            )}
                          >
                            {
                              "Bagaimana caranya & syarat-syarat untuk pembukaan distributor atau waralaba dengan uwinflay? "
                            }
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fjPks
                          )}
                        >
                          {"First Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__uymBv
                        )}
                        id={2}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ivHkG
                            )}
                          >
                            {"Apakah bisa buka toko di rumah sendiri? "}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ccf1H
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__jhRuU
                        )}
                        id={"3"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wEWpj
                            )}
                          >
                            {
                              "Apakah barang diantar sampai toko & bagaimana dengan ongkos kirimnya? "
                            }
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oab2R
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__h7ZVl
                        )}
                        id={"4"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__f0ZJ
                            )}
                          >
                            {"Apakah ada minimal pemesanan? "}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mnuUe
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__ncxg5
                        )}
                        id={"5"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___2XVc9
                            )}
                          >
                            {
                              "Apakah harganya lebih murah dibandingkan distributor? "
                            }
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wsyGt
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem___7ACze
                        )}
                        id={"6"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__h0GMx
                            )}
                          >
                            {
                              "Apakah tokonya menggunakan nama uwinflay? Berapa lama waktu sampai buka toko? "
                            }
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__siI3I
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__vFVum
                        )}
                        id={"7"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bg7XX
                            )}
                          >
                            {"Apakah boleh berjualan produk lain?"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zLkeA
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                    </React.Fragment>
                  ),
                  onChange: generateStateOnChangePropForCodeComponents(
                    $state,
                    "activePanelId",
                    ["accordion4", "activePanelId"],
                    AntdAccordion_Helpers
                  )
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "activePanelId",
                      plasmicStateName: "accordion4.activePanelId"
                    }
                  ],
                  [],
                  AntdAccordion_Helpers ?? {},
                  child$Props
                );

                return (
                  <AntdAccordion
                    data-plasmic-name={"accordion4"}
                    data-plasmic-override={overrides.accordion4}
                    {...child$Props}
                  />
                );
              })()}
            </section>
          ) : null}
          <FooterMain
            data-plasmic-name={"footerMain"}
            data-plasmic-override={overrides.footerMain}
            className={classNames("__wab_instance", sty.footerMain)}
          />

          <section className={classNames(projectcss.all, sty.section__jxUFe)}>
            <div className={classNames(projectcss.all, sty.columns__jkwJb)}>
              <div className={classNames(projectcss.all, sty.column__eUeyZ)}>
                <div className={classNames(projectcss.all, sty.columns__znzFe)}>
                  <div
                    className={classNames(projectcss.all, sty.column__bNPt0)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eQ1Uc
                      )}
                    >
                      {"Pembayaran :"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__cYPwG)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__qBwbb)}
                      displayHeight={"80px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/uwinfly/images/_1646110410MandiriVapng.png",
                        fullWidth: 257,
                        fullHeight: 225,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__gR3P7)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__auA5X)}
                      displayHeight={"62px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/uwinfly/images/bcApng.png",
                        fullWidth: 257,
                        fullHeight: 225,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__vl3Wh)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__uyEm6)}
                      displayHeight={"66px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/uwinfly/images/download1Png.png",
                        fullWidth: 257,
                        fullHeight: 225,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___8DIrI)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__iOgZ4)}
                      displayHeight={"80px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/uwinfly/images/downloadpng.png",
                        fullWidth: 225,
                        fullHeight: 225,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>
              </div>
            </div>
          </section>
          <PlasmicHead
            data-plasmic-name={"pageMetadataOverride"}
            data-plasmic-override={overrides.pageMetadataOverride}
            canonical={"https://uwinfly.co.id/Kotak-kami"}
            className={classNames("__wab_instance", sty.pageMetadataOverride)}
            description={"produk uwinfly motor listrik sepeda listrik "}
            image={"/plasmic/uwinfly/images/logopng.png"}
            title={"kotak kami"}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navigationBar",
    "link1",
    "link2",
    "link3",
    "link4",
    "link5",
    "link6",
    "clientsSection6",
    "form2",
    "textArea",
    "accordion2",
    "accordion3",
    "accordion4",
    "footerMain",
    "pageMetadataOverride"
  ],
  navigationBar: [
    "navigationBar",
    "link1",
    "link2",
    "link3",
    "link4",
    "link5",
    "link6"
  ],
  link1: ["link1"],
  link2: ["link2"],
  link3: ["link3"],
  link4: ["link4"],
  link5: ["link5"],
  link6: ["link6"],
  clientsSection6: ["clientsSection6", "form2", "textArea", "accordion2"],
  form2: ["form2", "textArea"],
  textArea: ["textArea"],
  accordion2: ["accordion2"],
  accordion3: ["accordion3"],
  accordion4: ["accordion4"],
  footerMain: ["footerMain"],
  pageMetadataOverride: ["pageMetadataOverride"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navigationBar: typeof NavigationBar;
  link1: typeof Link1;
  link2: typeof Link2;
  link3: typeof Link3;
  link4: typeof Link4;
  link5: typeof Link5;
  link6: typeof Link6;
  clientsSection6: "div";
  form2: typeof FormWrapper;
  textArea: typeof AntdTextArea;
  accordion2: typeof AntdAccordion;
  accordion3: typeof AntdAccordion;
  accordion4: typeof AntdAccordion;
  footerMain: typeof FooterMain;
  pageMetadataOverride: typeof PlasmicHead;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicKotakKami__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicKotakKami__VariantsArgs;
    args?: PlasmicKotakKami__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicKotakKami__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicKotakKami__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicKotakKami__ArgProps,
          internalVariantPropNames: PlasmicKotakKami__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicKotakKami__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicKotakKami";
  } else {
    func.displayName = `PlasmicKotakKami.${nodeName}`;
  }
  return func;
}

function withPlasmicPageGuard<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const PageGuard: React.FC<P> = props => (
    <PlasmicPageGuard__
      minRole={null}
      appId={"iWaiTLt8mAup4ReehswsSx"}
      authorizeEndpoint={"https://studio.plasmic.app/authorize"}
      canTriggerLogin={true}
    >
      <WrappedComponent {...props} />
    </PlasmicPageGuard__>
  );

  return PageGuard;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "iWaiTLt8mAup4ReehswsSx"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicKotakKami = Object.assign(
  // Top-level PlasmicKotakKami renders the root element
  withUsePlasmicAuth(withPlasmicPageGuard(makeNodeComponent("root"))),
  {
    // Helper components rendering sub-elements
    navigationBar: makeNodeComponent("navigationBar"),
    link1: makeNodeComponent("link1"),
    link2: makeNodeComponent("link2"),
    link3: makeNodeComponent("link3"),
    link4: makeNodeComponent("link4"),
    link5: makeNodeComponent("link5"),
    link6: makeNodeComponent("link6"),
    clientsSection6: makeNodeComponent("clientsSection6"),
    form2: makeNodeComponent("form2"),
    textArea: makeNodeComponent("textArea"),
    accordion2: makeNodeComponent("accordion2"),
    accordion3: makeNodeComponent("accordion3"),
    accordion4: makeNodeComponent("accordion4"),
    footerMain: makeNodeComponent("footerMain"),
    pageMetadataOverride: makeNodeComponent("pageMetadataOverride"),

    // Metadata about props expected for PlasmicKotakKami
    internalVariantProps: PlasmicKotakKami__VariantProps,
    internalArgProps: PlasmicKotakKami__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "kotak kami",
      description: "produk uwinfly motor listrik sepeda listrik ",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicKotakKami;
/* prettier-ignore-end */
